/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as HomeRouteImport } from './routes/home'
import { Route as Ch02RouteImport } from './routes/ch02'
import { Route as Ch01RouteImport } from './routes/ch01'

const HomeRoute = HomeRouteImport.update({
  id: '/home',
  path: '/home',
  getParentRoute: () => rootRouteImport,
} as any)
const Ch02Route = Ch02RouteImport.update({
  id: '/ch02',
  path: '/ch02',
  getParentRoute: () => rootRouteImport,
} as any)
const Ch01Route = Ch01RouteImport.update({
  id: '/ch01',
  path: '/ch01',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/ch01': typeof Ch01Route
  '/ch02': typeof Ch02Route
  '/home': typeof HomeRoute
}
export interface FileRoutesByTo {
  '/ch01': typeof Ch01Route
  '/ch02': typeof Ch02Route
  '/home': typeof HomeRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/ch01': typeof Ch01Route
  '/ch02': typeof Ch02Route
  '/home': typeof HomeRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/ch01' | '/ch02' | '/home'
  fileRoutesByTo: FileRoutesByTo
  to: '/ch01' | '/ch02' | '/home'
  id: '__root__' | '/ch01' | '/ch02' | '/home'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  Ch01Route: typeof Ch01Route
  Ch02Route: typeof Ch02Route
  HomeRoute: typeof HomeRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/home': {
      id: '/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof HomeRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/ch02': {
      id: '/ch02'
      path: '/ch02'
      fullPath: '/ch02'
      preLoaderRoute: typeof Ch02RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/ch01': {
      id: '/ch01'
      path: '/ch01'
      fullPath: '/ch01'
      preLoaderRoute: typeof Ch01RouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  Ch01Route: Ch01Route,
  Ch02Route: Ch02Route,
  HomeRoute: HomeRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
